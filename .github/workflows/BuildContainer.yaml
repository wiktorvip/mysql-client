name: Build container

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
on:
  workflow_dispatch:

env:
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
  #GH_REPO: ${{ github.repository }}                     # wiktorvip/...
  GH_REPONAME: ${{ github.event.repository.name }}      # ...
  #DOCKERHUB_REPO_NAME: "wiktorvip/...."
  #IMAGE_TAG: "1.0"

jobs:
  build:
    #if: "contains(github.event.head_commit.message, 'do-ci')"
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      security-events: write

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v4

    - name: "Set varable APP_VERSION from file APP_VERSION if exist"
      if: ${{ hashFiles('APP_VERSION') != '' }}
      run: APP_VER=$(cat APP_VERSION); echo "APP_VERSION=$APP_VER" >> ${GITHUB_ENV}

    - name: "Set varable APP_VERSION to default if file not exist"
      if: ${{ hashFiles('APP_VERSION') == '' }}
      run: echo "APP_VERSION=1.0" >> ${GITHUB_ENV}

    - name: "Lowercase the repo name and username"
      run: echo "GH_REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: "Set up QEMU"
      uses: docker/setup-qemu-action@v3

    - name: "Set up Docker Buildx"
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: "Login to Docker Hub"
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: "Login to GitHub Container Registry"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: "Build and push to Docker Hub"
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{env.DOCKER_USERNAME}}/${{env.GH_REPONAME}}:latest
          ${{env.DOCKER_USERNAME}}/${{env.GH_REPONAME}}:${{env.APP_VERSION}}

    - name: "Docker Hub Description"
      uses: peter-evans/dockerhub-description@v3
      with:
        username: ${{env.DOCKER_USERNAME}}
        password: ${{env.DOCKER_PASSWORD}}
        repository: ${{env.GH_REPO}}
        short-description: ${{ github.event.repository.description }}

    - name: "Push image to GHCR"
      run: |
        docker buildx imagetools create \
          --tag ghcr.io/${{env.GH_REPO}}:latest \
          --tag ghcr.io/${{env.GH_REPO}}:${{env.APP_VERSION}} \
          ${{env.GH_REPO}}:latest
          
    - name: "Vulnerability scan container image with Grype"
      uses: anchore/scan-action@v3
      id: imagescan
      with:
        image: "${{env.DOCKER_USERNAME}}/${{env.GH_REPONAME}}:latest"
        acs-report-enable: "true"
        fail-build: false

    - name: "Upload Anchore Image scan SARIF report"
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: ${{ steps.imagescan.outputs.sarif }}

    - name: "Vulnerability scan container image with Trivy"
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: "${{env.DOCKER_USERNAME}}/${{env.GH_REPONAME}}:latest"
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: "Upload Trivy scan results to GitHub Security tab"
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
